{"version":3,"sources":["games/example.js","base/base.js"],"names":[],"mappings":";;;;;;;;;;;;IAAM;;;AAEJ,WAFI,0BAEJ,CAAY,UAAZ,EAAuB;0BAFnB,4BAEmB;;kEAFnB,uCAGI,aADe;GAAvB;;eAFI;;yBAMC,KAAK,WAAU;AAClB,iCAPE,gEAOS,KAAK,UAAhB,CADkB;AAElB,UAAI,QAAJ,CAAa,CAAb,EAAe,CAAf,EAAiB,GAAjB,EAAqB,GAArB,EAFkB;;;;SANhB;EAAmC;;AAazC,IAAI,YAAY,IAAI,kBAAJ,CAAuB,EAAE,uBAAF,CAAvB,CAAZ;AACJ,UAAU,IAAV,CAAe,CAAC,0BAAD,CAAf;;;;;;;;;;;ICbM,SAEJ,SAFI,MAEJ,GAAa;wBAFT,QAES;CAAb;;IAMI;;;AACJ,WADI,aACJ,GAAa;0BADT,eACS;;kEADT,2BACS;GAAb;;SADI;EAAsB;;IAMtB;;;AACJ,WADI,kBACJ,CAAY,IAAZ,EAAiB;0BADb,oBACa;;wEADb,gCACa;;AAEf,WAAK,KAAL,GAAa,IAAb,CAFe;;GAAjB;;eADI;;yBAkBC,UAAS;AACZ,WAAK,WAAL,GAAmB,QAAnB,CADY;AAEZ,WAAK,KAAL,GAFY;;;;4BAKP;AACL,WAAK,OAAL,GAAe,IAAf,CADK;AAEL,WAAK,OAAL,GAAe,EAAE,4CAAF,CAAf,CAFK;AAGL,WAAK,GAAL,GAAW,KAAK,OAAL,CAAa,CAAb,EAAgB,UAAhB,CAA2B,IAA3B,CAAX,CAHK;AAIL,WAAK,KAAL,CAAW,MAAX,CAAkB,KAAK,OAAL,CAAlB,CAJK;;;;4BAQA;AACL,UAAG,CAAC,KAAK,OAAL,EAAc,KAAK,KAAL,GAAlB;;AADK,YAGL,CAAO,qBAAP,CAA6B,KAAK,IAAL,CAAU,IAAV,CAAe,IAAf,CAA7B,EAHK;;;;yBAMF,WAAU;AACb,WAAK,UAAL,CAAgB,IAAhB,CAAqB,KAAK,GAAL,EAAU,SAA/B,EADa;AAEb,aAAO,qBAAP,CAA6B,KAAK,IAAL,CAAU,IAAV,CAAe,IAAf,CAA7B,EAFa;;;;wBA/BL;AACR,aAAO,KAAK,KAAL,CADC;;;;wBAIM;AACd,UAAG,CAAC,KAAK,WAAL,EAAiB;AACnB,aAAK,WAAL,GAAmB,IAAI,KAAK,WAAL,CAAiB,CAAjB,CAAJ,EAAnB,CADmB;OAArB;;AAIA,aAAO,KAAK,WAAL,CALO;;;;SAVZ;EAA2B;;IA2C3B;;;AACJ,WADI,sBACJ,CAAY,UAAZ,EAAuB;0BADnB,wBACmB;;wEADnB,oCACmB;;AAErB,WAAK,WAAL,GAAmB,UAAnB,CAFqB;;GAAvB;;eADI;;yBAUC,KAAI;;;wBAJO;AACd,aAAO,KAAK,WAAL,CADO;;;;SANZ;EAA+B;;AAcrC,QAAQ,GAAR,CAAY,MAAZ","file":"core.js","sourcesContent":["class OJCaptchaMicroGame_example extends OJCaptchaMicroGameBase { \r\n  \r\n  constructor(randomSeed){\r\n    super(randomSeed);\r\n  }\r\n  \r\n  tick(ctx, timestamp){\r\n    super.tick(ctx, timestamp);\r\n    ctx.fillRect(0,0,400,400);\r\n  }\r\n  \r\n} \r\n \r\nvar container = new OJCaptchaContainer($(\"#oj-captcha-container\"));\r\ncontainer.init([OJCaptchaMicroGame_example]);","\r\nclass OJBase {\r\n  \r\n  constructor(){\r\n    \r\n  }\r\n  \r\n}\r\n\r\nclass OJCaptchaBase extends OJBase {\r\n  constructor(){\r\n    super();\r\n  }\r\n} \r\n\r\nclass OJCaptchaContainer extends OJCaptchaBase {\r\n  constructor($src){\r\n    super();\r\n    this._$src = $src;\r\n  }\r\n  \r\n  get $src(){\r\n    return this._$src; \r\n  }\r\n  \r\n  get activeGame(){\r\n    if(!this._activeGame){\r\n      this._activeGame = new this._gamesQueue[0]();\r\n    }\r\n    \r\n    return this._activeGame;\r\n  }\r\n  \r\n  init(gamesArr){\r\n    this._gamesQueue = gamesArr;\r\n    this.start();\r\n  }\r\n  \r\n  build(){\r\n    this.isBuild = true;\r\n    this.$canvas = $(\"<canvas width='400' height='400'></canvas>\");\r\n    this.ctx = this.$canvas[0].getContext(\"2d\");\r\n    this._$src.append(this.$canvas);\r\n    \r\n  }\r\n  \r\n  start(){\r\n    if(!this.isBuilt) this.build();\r\n    //tick\r\n    window.requestAnimationFrame(this.tick.bind(this));  \r\n  }\r\n  \r\n  tick(timeStamp){\r\n    this.activeGame.tick(this.ctx, timeStamp);\r\n    window.requestAnimationFrame(this.tick.bind(this));\r\n  }\r\n}\r\n\r\nclass OJCaptchaMicroGameBase extends OJCaptchaBase {\r\n  constructor(randomSeed){\r\n    super();\r\n    this._randomSeed = randomSeed;\r\n  }\r\n  \r\n  get randomSeed(){\r\n    return this._randomSeed;\r\n  }\r\n  \r\n  tick(ctx){\r\n    \r\n  }\r\n}\r\nconsole.log('done')"],"sourceRoot":"/source/"}